openapi: 3.1.0
servers: 
  - url: https://retail.gb.bink.com/webhooks/"
    description: "Retail sandbox server"
info:
  version: 1.0.0
  title: Bink Webhook API
  description:  "<h1>Bink webhook endpoints</h1>
    This API allows clients to register their webhook endpoints with Bink. <br><br> This API accepts a JSON body and provides HTTP response codes and a JSON response body.
    <br><br>
    This specification also describes the payload that receivers should expect to receive to their endpoints and how to respond to the request. 
    </br></br>
    <h2>Authentication</h2>
    Bink uses API keys to authenticate requests. Provide your API key in every request in the X-API-KEY header. Bink will provide each retailer with an API key upon integration. 
    <br><br>
    <h2>Errors</h2>
    Bink's API uses HTTP response codes. Codes in the 2xx range indicate success. Requests that result in errors codes have a code in the 4xx range and a JSON body containing <i>error_message</i> and <i>error_slug</i> fields. 

    <h2>Versioning</h2>
    The Webhook API is versionless, all changes will be backward-compatible. Any future changes that are backward-incompatible with result in a new API operation. 
    "
  x-logo: 
    url: https://logos.bink.com/img/logos/mono-teal.png    
paths: 
  /retailers/{retailer_id}/webhook_endpoints:
    post:
      security: 
        - ApiKeyAuth: [] 
      tags:
        - Webhook endpoints
      summary: "Create a webhook endpoint"
      description: "Create a webhook endpoint to be notified about events that happen in your enrolled retailer."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookEndpoint'
      parameters:
        - in: path
          name: retailer_id
          description: "The unique identifier for the retailer. Bink will provide this value to you."
          required: true
          schema:
            type: string
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhook_id: 
                    type: number
                    example: 123
        '401':
          $ref: '../common/components.yaml#/components/responses/Error401'
        '403':
          description: Forbidden 
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message: 
                    type: string
                    example: "You are not authorized to access this resource"
                  error_slug: 
                    type: string
                    example: "not_authorized"
        '422':
          $ref: '../common/components.yaml#/components/responses/Error422'  
  /retailers/{retailer_id}/webhook_endpoints/{webhook_id}:
    patch:
      security: 
        - ApiKeyAuth: []
      tags:
        - Webhook endpoints
      summary: "Update a webhook endpoint"
      description: "Update a webhook endpoint "       
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookEndpoint'
      parameters:
        - in: path
          name: retailer_id
          description: "The unique identifier for the retailer. Bink will provide this value to you."
          required: true
          schema:
            type: string
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhook_id: 
                    type: number
                    example: 123
        '401':
          $ref: '../common/components.yaml#/components/responses/Error401'
        '403':
          $ref: '../common/components.yaml#/components/responses/Error403'
        '422':
          $ref: '../common/components.yaml#/components/responses/Error422'
webhooks:
  Identified Transaction Webhook: 
    post:
      security: 
        - ApiKeyAuth: [] 
      tags:
        - Transaction Webhook
      summary: "Webhook endpoint to be implemented by data receivers to accept identified transactions from Bink"
      description: "Describes the headers and payload that receivers should expect to receive to their endpoints and how to respond to the request."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentifiedTransaction'
      responses: 
        '200':
          description: OK
        '401':
          $ref: '../common/components.yaml#/components/responses/Error401'
        '403':
          $ref: '../common/components.yaml#/components/responses/Error403'
        '422':
          $ref: '../common/components.yaml#/components/responses/Error422'
components:
  schemas:
    IdentifiedTransaction:
      type: object
      properties:
        user_id:
          type: string
          description: The unique identifier of the user involved in the transaction.
        amount:
          type: number
          description: The monetary amount of the transaction.
        location_id:
          type: string
          description: The unique identifier of the location where the transaction occurred.
        date_time: 
          type: string
          format: date-time
          description: The date and time when the transaction occurred.
    WebhookEndpoint:
      type: object
      properties: 
        enabled_events:
          type: array
          items:
            type: string
          description: "The events that will trigger the webhook. Possible values are 'identified_transaction'. </br>An Identified Transaction object represents a customer card payment at an enrolled retailer location. "
          examples: 
            - ["identified_transaction", "mid_enrolled"]
        url: 
          type: string
          description: "The URL that will receive the webhook payload."
          example: "https://example.com/webhook"
        secret: 
          type: string
          description: "A secret key that Bink will include as an API key OR use to sign the webhook payload. This key will be used to verify the authenticity of the payload."
          example: "my_secret_key" 
  securitySchemes:
    ApiKeyAuth:      
      type: apiKey
      in: header     
      name: X-API-KEY