asyncapi: 3.0.0
info:
  title: Reporting and MI
  version: 1.0.0
  description: |
    Events for Reporting and MI
    ### Supports the following messages
    * User Created
    * User Deleted via API
    * User Accessed Bink Service 
    * Loyalty Card Add and Authorise request
    * Loyalty Card Add and Authorise success
    * Loyalty Card Add and Authorise failed
    * Loyalty Card Authorise request
    * Loyalty Card Authorise success
    * Loyalty Card Authorise failed
    * Loyalty Card Join Request
    * Loyalty Card Join Success
    * Loyalty Card Join Failed
    * Loyalty Card Register Request
    * Loyalty Card Register Success
    * Loyalty Card Register Failed
    * Loyalty Card Removed
    * Loyalty Card Status Change
defaultContentType: application/json
servers:
  staging:
    host: 'guest:guest@rabbitmq:5672'
    protocol: amqp
    description: staging broker
channels:
  user.created:
    address: user.created
    messages:
      subscribe.message:
        $ref: '#/components/messages/UserCreated'
    description: Message queue for user creation
  user.deleted.api:
    address: user.deleted.api
    messages:
      subscribe.message:
        $ref: '#/components/messages/UserDeletedAPI'
    description: Message queue for user deletion via API 
  user.session.start:
    address: user.session.start
    messages:
      subscribe.message:
        $ref: '#/components/messages/UserSessionStart'
    description: Message queue for user session start
  lc.addandauth.request:
    address: lc.addandauth.request
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardAddAndAuthRequest'
    description: Message queue for loyalty card add and authorise request 
  lc.addandauth.success:
    address: lc.addandauth.success
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardAddAndAuthResponse'
    description: Message queue for loyalty card add and authorise success
  lc.addandauth.failed:
    address: lc.addandauth.failed
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardAddAndAuthResponse'
    description: Message queue for loyalty card add and authorise failed  
  lc.auth.request:
    address: lc.auth.request
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardAddAndAuthRequest'
    description: Message queue for loyalty card authorise request
  lc.auth.success:
    address: lc.auth.success
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardAddAndAuthResponse'
    description: Message queue for loyalty card authorise success
  lc.auth.failed:
    address: lc.auth.failed
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardAddAndAuthResponse'
    description: Message queue for loyalty card authorise failed
  lc.join.request:
    address: lc.join.request
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardJoinRequest'
    description: Message queue for loyalty card join request
  lc.join.success:
    address: lc.join.success
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardJoinSuccess'
    description: Message queue for loyalty card join success
  lc.join.failed:
    address: lc.join.failed
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardJoinFailed'
    description: Message queue for loyalty card join failed
  lc.register.request:
    address: lc.register.request
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardRegisterRequest'
    description: Message queue for loyalty card register request
  lc.register.success:
    address: lc.register.success
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardRegisterSuccess'
    description: Message queue for loyalty card register success
  lc.register.failed:
    address: lc.register.failed
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardRegisterFailed'
    description: Message queue for loyalty card register failed
  lc.removed:
    address: lc.removed
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardRemoved'
    description: Message queue for loyalty card removed
  lc.statuschange:
    address: lc.statuschange
    messages:
      subscribe.message:
        $ref: '#/components/messages/LoyaltyCardStatusChange'
    description: Message queue for loyalty card status change
operations:
  user.created:
    action: send
    channel:
      $ref: '#/channels/user.created'
    messages:
      - $ref: '#/channels/user.created/messages/subscribe.message'
  user.deleted.api:
    action: send
    channel:
      $ref: '#/channels/user.deleted.api'
    messages:
      - $ref: '#/channels/user.deleted.api/messages/subscribe.message'
  user.session.start:
    action: send
    channel:
      $ref: '#/channels/user.session.start'
    messages:
      - $ref: '#/channels/user.session.start/messages/subscribe.message'
  lc.addandauth.request:
    action: send
    channel:
      $ref: '#/channels/lc.addandauth.request'
    messages:
      - $ref: '#/channels/lc.addandauth.request/messages/subscribe.message' 
  lc.addandauth.success:
    action: send
    channel:
      $ref: '#/channels/lc.addandauth.success'
    messages:
      - $ref: '#/channels/lc.addandauth.success/messages/subscribe.message'
  lc.addandauth.failed:
    action: send
    channel:
      $ref: '#/channels/lc.addandauth.failed'
    messages:
      - $ref: '#/channels/lc.addandauth.failed/messages/subscribe.message'
  lc.auth.request:
    action: send
    channel:
      $ref: '#/channels/lc.auth.request'
    messages:
      - $ref: '#/channels/lc.auth.request/messages/subscribe.message'
  lc.auth.success:
    action: send
    channel:
      $ref: '#/channels/lc.auth.success'
    messages:
      - $ref: '#/channels/lc.auth.success/messages/subscribe.message'
  lc.auth.failed:
    action: send
    channel:
      $ref: '#/channels/lc.auth.failed'
    messages:
      - $ref: '#/channels/lc.auth.failed/messages/subscribe.message'    
  lc.join.request:
    action: send
    channel:
      $ref: '#/channels/lc.join.request'
    messages:
      - $ref: '#/channels/lc.join.request/messages/subscribe.message'
  lc.join.success:
    action: send
    channel:
      $ref: '#/channels/lc.join.success'
    messages:
      - $ref: '#/channels/lc.join.success/messages/subscribe.message'
  lc.join.failed:
    action: send
    channel:
      $ref: '#/channels/lc.join.failed'
    messages:
      - $ref: '#/channels/lc.join.failed/messages/subscribe.message'    
  lc.register.request:
    action: send
    channel:
      $ref: '#/channels/lc.register.request'
    messages:
      - $ref: '#/channels/lc.register.request/messages/subscribe.message'
  lc.register.success:
    action: send
    channel:
      $ref: '#/channels/lc.register.success'
    messages:
      - $ref: '#/channels/lc.register.success/messages/subscribe.message'
  lc.register.failed:
    action: send
    channel:
      $ref: '#/channels/lc.register.failed'
    messages:
      - $ref: '#/channels/lc.register.failed/messages/subscribe.message'
  lc.removed:
    action: send
    channel:
      $ref: '#/channels/lc.removed'
    messages:
      - $ref: '#/channels/lc.removed/messages/subscribe.message'
  lc.statuschange:
    action: send
    channel:
      $ref: '#/channels/lc.statuschange'
    messages:
      - $ref: '#/channels/lc.statuschange/messages/subscribe.message'
components:
  messages:
    UserCreated:
      name: User Created 
      title: User Created
      summary: Indicates that a user has signed up to the Bink Service
      payload:
        $ref: '#/components/schemas/Metadata'
    UserDeletedAPI:
      name: User Deleted API
      title: User Deleted API
      summary: Indicates that a user has been deleted via the API
      payload:
        $ref: '#/components/schemas/Metadata'  
    UserSessionStart:
      name: User Session Start
      title: User Session Start
      summary: Indicates that a user has acessed the Bink Service
      payload:
        $ref: '#/components/schemas/Metadata'
    LoyaltyCardAddAndAuthRequest:
      name: Loyalty Card Add and Authorise Request
      title: Loyalty Card Add and Authorise Request
      summary: Indicates that a user has requested to add and authorise a loyalty card
      payload:
        allOf:
          - $ref: '#/components/schemas/Metadata'
          - $ref: '#/components/schemas/AddAndAuthData'    
          - $ref: '#/components/schemas/MainAnswer'
    LoyaltyCardAddAndAuthResponse:
      name: Loyalty Card Add and Authorise Response 
      title: Loyalty Card Add and Authorise Response
      summary: Event generated when loyalty card add and authorise request is successful or failed 
      payload:
        allOf:
          - $ref: '#/components/schemas/Metadata'
          - $ref: '#/components/schemas/AddAndAuthData'
          - $ref: '#/components/schemas/MainAnswer'
          - $ref: '#/components/schemas/Status'
    AuthoriseRequest:
      name: Loyalty Card Authorise Request
      title: Loyalty Card Authorise Request
      summary: Indicates that a user has requested to authorise a loyalty card
      payload:
        allOf:
          - $ref: '#/components/schemas/Metadata'
          - $ref: '#/components/schemas/AddAndAuthData'      
          - $ref: '#/components/schemas/MainAnswer'
    AuthoriseSuccess:
      name: Loyalty Card Authorise Success
      title: Loyalty Card Authorise Success
      summary: Indicates that a user has successfully authorised a loyalty card
      payload:
        allOf:
          - $ref: '#/components/schemas/Metadata'
          - $ref: '#/components/schemas/AddAndAuthData'
          - $ref: '#/components/schemas/MainAnswer'
          - $ref: '#/components/schemas/Status'
    AuthoriseFailed:
      name: Loyalty Card Authorise Failed
      title: Loyalty Card Authorise Failed
      summary: Indicates that a user has failed to authorise a loyalty card
      payload:
        allOf:
          - $ref: '#/components/schemas/Metadata'
          - $ref: '#/components/schemas/AddAndAuthData'
          - $ref: '#/components/schemas/MainAnswer'
          - $ref: '#/components/schemas/Status'
    LoyaltyCardJoinRequest:
      name: Loyalty Card Join Request
      title: Loyalty Card Join Request
      summary: Indicates that a user has requested to join a loyalty plan
      payload:
        allOf:
          - $ref: '#/components/schemas/Metadata'
          - $ref: '#/components/schemas/AddAndAuthData'
    LoyaltyCardJoinSuccess:
      name: Loyalty Card Join Success
      title: Loyalty Card Join Success
      summary: Indicates that a user has successfully joined a loyalty plan
      payload:
        allOf:
          - $ref: '#/components/schemas/Metadata'
          - $ref: '#/components/schemas/AddAndAuthData'
          - $ref: '#/components/schemas/MainAnswer'
          - $ref: '#/components/schemas/Status'
    LoyaltyCardJoinFailed:
      name: Loyalty Card Join Failed
      title: Loyalty Card Join Failed
      summary: Indicates that a user has failed to join a loyalty plan
      payload:
        allOf:
          - $ref: '#/components/schemas/Metadata'
          - $ref: '#/components/schemas/AddAndAuthData'
          - $ref: '#/components/schemas/MainAnswer'
          - $ref: '#/components/schemas/Status'
    LoyaltyCardRegisterRequest:
      name: Loyalty Card Register Request
      title: Loyalty Card Register Request
      summary: Indicates that a user has requested to register a loyalty card
      payload:
        allOf:
          - $ref: '#/components/schemas/Metadata'
          - $ref: '#/components/schemas/AddAndAuthData'
          - $ref: '#/components/schemas/MainAnswer'
    LoyaltyCardRegisterSuccess:
      name: Loyalty Card Register Success
      title: Loyalty Card Register Success
      summary: Indicates that a user has successfully registered a loyalty card
      payload:
        allOf:
          - $ref: '#/components/schemas/Metadata'
          - $ref: '#/components/schemas/AddAndAuthData'
          - $ref: '#/components/schemas/MainAnswer'
          - $ref: '#/components/schemas/Status'
    LoyaltyCardRegisterFailed: 
      name: Loyalty Card Register Failed
      title: Loyalty Card Register Failed
      summary: Indicates that a user has failed to register a loyalty card
      payload:
        allOf:
          - $ref: '#/components/schemas/Metadata'
          - $ref: '#/components/schemas/AddAndAuthData'
          - $ref: '#/components/schemas/MainAnswer'
          - $ref: '#/components/schemas/Status'
    LoyaltyCardRemoved:
      name: Loyalty Card Removed
      title: Loyalty Card Removed
      summary: Indicates that a user has removed a loyalty card
      payload:
        allOf:
          - $ref: '#/components/schemas/Metadata'
          - $ref: '#/components/schemas/AddAndAuthData'
          - $ref: '#/components/schemas/MainAnswer'
          - $ref: '#/components/schemas/Status'
    LoyaltyCardStatusChange:
      name: Loyalty Card Status Change
      title: Loyalty Card Status Change
      summary: Indicates that a user has changed the status of a loyalty card
      payload:
        allOf:
          - $ref: '#/components/schemas/Metadata'
          - $ref: '#/components/schemas/AddAndAuthData'
          - $ref: '#/components/schemas/MainAnswer'
          - $ref: '#/components/schemas/ToStatus'
  schemas:
    Metadata:
      allOf:
        - $ref: '#/components/schemas/RequiredMetadata'
    RequiredMetadata:
      type: object
      properties:
        event_type:
          description: 'The event type identifier, used for event subscriptions and routing'
          type: string
          example: user.created
        origin:
          description: 'Identifier for what triggered the event.'
          type: string
          enum: ["channel", "django.admin", "merchant.callback"]
          example: channel
        channel:
          type: string
          description: The identifier for the Channel that sent the request
          example: com.barclays.bmb
        event_date_time:
          type: string
          format: date-time
          example: 
          description: "Date and time of event creation in UTC"  
        external_user_ref:
          type: string
          example: "1645109767123456"
          description: "external identifier as passed in by client"  
        internal_user_ref:
          type: string
          example: "12345"
          description: "Database user ID (not UUID)"            
        email:
          type: string
          description: "User's e-mail address"
          example: "user@example.com"
    AddAndAuthData:
      type: object
      properties:   
        scheme_account_id:
          type: string
          description: "The scheme account identifier"
          example: "1234567890"
        loyalty_plan:
          type: string
          description: "The loyalty plan identifier"
          example: "329"
    Status:
      type: object
      properties: 
        status:
          type: string
          description: "The response code from the retailer system"
          example: "0"
    MainAnswer:     
      type: object
      properties:
        main_answer:
          type: string
          description: "The credential field used as unique key value on the scheme account record"
          example: "XC73464D"
    ToStatus:
      type: object
      properties:
        to_status:
          type: string
          description: "The new status of the scheme account"
          example: "0"